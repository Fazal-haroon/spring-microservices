spring.application.name=netflix-zuul-api-gateway-server
server.port=8765
eureka.client.service-url.default-zone=http://localhost:8761/eureka

#http://localhost:8765/currency-exchange-service/currency-exchange/from/USD/to/PKR
#http://{current zuul api gateway port}/{currency exchange service name}/{URI of currency exchange service}

#Tip: Zuul uses AppName in the url to talk to Eureka and find the url of the service!

#[Service name, Trace id, Span id, Export Flag]
#[netflix-zuul-api-gateway-server,b753b192481a9f0d,8db41d32640636a9,true]
#Trace id: A unique ID that remains the same throughout the microservices for perticular request
#Span id: A unique ID per microservice

#RabbitMQ
#Producer: Producer is an application that sends msgs. It does not send msgs directly to the consumer. It send msgs only to the RabbitMQ broker.
#Consumer: consumer is an application that receive/reads msgs from the RabbitMQ broker.
#Queue: Queue is a buffer or storage in a RabbitMQ broker to store the msgs. #The msgs are put into a queue by a producer and receive/read from it by a consumer. Once a msg is read, it is consumed and removed from the queue. A msg can thus only be processed exactly once.
#Message: Information that is sent from the producer to a consumer through RabbitMQ.
#Exchange: Basically, it asts as an intermediary btw the producer and a queue. Instead of sending msg directly to a queue, a producer can send them to an exchange instead. The exchange then sends those msgs to one or more queues following a specified set of rules. thus, the producer does not need to know the queues that eventually receive/read those msgs.
#Routing key: The routing key is a key that the exchange looks at to decide how to route the message to queues. The routing key is like an address for the msg.
#Binding: A binding is a link btw a queue and an exchange.
#Install: By Docker
#$ docker pull rabbitmq:3.10.17-management
#$ docker run --rm -it -p 15672:15672 -p 5672:5672 rabbitmq:3.10.17-management
#Port 15672 is for the RabbitMQ management website
#Port 5672 is used for the RabbitMQ client connections
#When rabbitmq run, the  rabbitmq_management plugin is very important
