spring.application.name=currency-conversion
server.port=8100

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

spring.sleuth.sampler.probability=1.0

## CHANGE-KUBERNETES
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

#Virtual Instance
# AWS EC2 (Elastic Compute Cloud)
# Azure Called them Virtual Machine
# Google Called them Compute Engine
# Kubernetes(k8s) called them Node(s)

#Kubernetes Architecture(Cluster)
# Master Node(s) manages cluster
# Worker Node(s) run your applications

#Kubernetes(k8s) on Cloud - Cloud Neutral
# AKS (Azure kubernetes service)
# Amazon EKS (Elastic kubernetes service)
# Google GKE (Google kubernetes engine)

#kubectl - Kube Controller (command which interact with cluster)

#$ kubectl create deployment.... -> deployment, replicaset & pod
#$ kubectl expose deployment.... -> service

#Kubernetes - K8S
# Container Orchestration(Container management tool) -> Manage 1000's of instances 1000's of microservices
# Features -> Declarative, Easy Scaling, Load Balancing, Self Healing and Zero Downtime Deployments
# Cloud Neutral -> Standardized platform on any infrastructure

#$ mvn spring-boot:build-image -DskipTests
#$ fazalharoon/currency-conversion-service:0.0.11-SNAPSHOT
#$ kubectl create deployment currency-conversion --image=fazalharoon/currency-conversion-service:0.0.11-SNAPSHOT
#$ kubectl expose deployment currency-conversion --type=LoadBalancer --port=8100
#$ kubectl get svc
#$ kubectl get pod
#$ kubectl get rs -o wide
#$ kubectl get all
