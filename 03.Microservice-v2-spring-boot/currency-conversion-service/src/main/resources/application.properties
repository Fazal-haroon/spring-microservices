spring.application.name=currency-conversion
server.port=8100
spring.config.import=optional:configserver:http://localhost:8888

#if you are using Eureka and feign so the load balancer come free with them, load balancer framework that is used by feign to actually distribute the load among the multiple instances which are returned by Eureka.
#In the earlier versions of spring cloud the load balancer which was used Ribbon. In the recent versions, spring cloud shifted to using spring cloud load balancer as the load balancer.

#Cloud API Gateway
#In the older versions of spring cloud, the popular API gateway to use was zuul Api Gateway, since zuul one is no longer supported by Netflix, Now the recommended option as an API Gateway is spring cloud Gateway.

#spring.cloud.gateway.discovery.locator.enabled=true

#Circuit Breaker - Resilience4j
#If one of the services is down or is slow (Impacts entire chain!)
#Can we return a fallback response if a service is down?
#Can we implement a circuit breaker pattern to reduce load?
#Can we retry requests in case of temporary failures?
#Can we implement rate limiting?
#Solution: Circuit Breaker Framework - Resilience4J
