server.port=8083
#logging.level.org.springframework = debug


#//configuration auto generation of swagger doc, just click on the below link
#//http://localhost:8083/swagger-ui.html

#Content Negotiation
#Same Resource - same URI, However different representations are possible
# example: Different Content Type - XML or JSON
# example: Different Langauge - english, arabic etc
# How can a consumer tell the REST API provider what they want?
# Content Negotiation
# Example: Accept header (MIME types - application/xml, application/json)
# Example: Accept-Language header (en, nl, fr, ..)

#Internationalization - i18n
#Your REST API might have consumers from around the world
# How do you customize it to users around the world?
# Typically, HTTP Request Header - Accept-Language is used
# Accept-Language - indicates natural language and locale that the consumer prefers
# Example: en - English (Good Morning)
# Example: ar - Arabic (Sabahaal Khair)
# /*
# * 'en' - English (Good Morning)
# * 'ar' - Arabic (Sabaah Al Khair)
# * 'ur' - Urdu (Sabaah Bakhair)
# * 'pa' - Pashto (Sahar Pakhair)
# * */

#Versioning REST API
#You have built an amazing REST API
# you have 100s of consumers
# you need to implement a breaking change
# example: split name into firstName and lastName
#Solution: Versioning Rest API
# URL, Request Parameter, Header, and Media Type
#Factors to consider: 1. URI Pollution, 2. Misuse of HTTP Headers, 3. Caching, 4. Can we execute the request on the browser?, 5. API Documentation
#Summary: No perfect solution for versioning

#HATEOAS
# Hypermedia as the Engine of Application State (HATEOAS)

#Spring Boot Actuator
# provides spring boot's production-ready features
# Monitor and manager your application in your production
# Provides a number of endpoints
# beans - Complete list of spring beans in your app
# health - application health information
# metrics - application metrics
# mappings - details around request mappings
#http://localhost:8083/actuator
management.endpoints.web.exposure.include=*